// 원시 타입 = 불변값
// -> 실제 메모리의 값은 수정되지 않음
// -> 값 자체로써 변수에 저장되고 복사 된다.
// 불변값이다 (메모리 값 수정 x)

// 객체타입 = 가변값
// 참조값을 통해 변수에 저장되고 복사된다.
// 가변값이다 (메모리 값 수정 O)

// 객체 타입 주의사항
// 1. 의도치 않게 값이 수정될 수 있다.

// 얕은 복사
let o1 = { name: "이정환" };
let o2 = o1;
// 객체의 참조값을 복사함
// 원본 객체가 수정될 수 있어 위험함

// 깊은 복사
let o3 = { name: "이정환" };
let o4 = { ...o1 };
// 새로운 객체를 생성하면서 프로퍼티만 따로 복사 함
// 원본 객체가 수정될 일이 없어서 안전함

// 2. 객체간의 비교는 기본적으로 참조값을 기준으로 이루어진다.

// 얕은 비교
// o1 === o2
// 참조값을 기준으로 비교

// 깊은 비교
// JSON.stringify(o1) === JSON.stringify(o2)
// 객체를 문자열로 변환하여 비교
// JSON.stringify 등의 내장 함수를 이용해야 함

// 3. 배열과 함수도 사실 객체이다.
